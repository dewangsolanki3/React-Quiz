{"version":3,"sources":["components/QuestionBox.js","components/Result.js","quizService/index.js","index.js"],"names":["QuestionBox","question","options","selectedOption","correction","useState","answer","setAnswer","console","log","className","map","x","index","key","onClick","Result","score","playAgain","qBank","answers","correct","questionId","quizService","Promise","resolve","reject","sort","Math","random","slice","Quizapp","getQuestions","then","Nquestions","setState","questionBank","state","computeScore","selectedAns","correctAns","token","abcCorrect","concat","responses","this","splice","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff4cda9d.chunk.js","sourcesContent":[" import React, {useState , Component} from \"react\";\n\nconst QuestionBox = ( {question, options, selectedOption, correction} ) => {       // question,options - props\n  const [answer, setAnswer] = useState(options);        // Hooks\n  console.log(correction);\n  \n  return(\n    <div className=\"questionBox\">\n    <div className =\"question\">\n      {question}\n    </div>\n    {answer.map( (x, index) => \n      <button \n          key={index}               // Just a key\n          className=\"answerBtn\"     // Just a CSS\n          onClick = { () => {\n            setAnswer([x])          // x is in [] coz it is getting mapped through an ARRAY\n            selectedOption(x)\n            }\n          }\n\n      > {x} </button> )}\n\n\n      {/* {correction.map( (y , index) => {\n        return(\n        <h3 \n        key={index}\n        > {\" Oops ! Correct Answer Was\" + \" \" } {y} </h3> )\n \n      })\n     } */}\n\n  </div>\n\n  )\n}\nexport default QuestionBox;\n\n\n\n\n\n// My Class method ~ A Bug\n\n// class QuestionBox extends Component {\n\n// render(){\n//   const answer = this.props.options;                      // prop\n//   let setAnswer = ([x]) => {                              //\n//     this.setState({                                       //  SCENE\n//       options:answer[x]                                   //\n//     })                                                    //\n    \n//   }\n//   return(\n//     <div className=\"questionBox\">\n//     <div className =\"question\">\n//       {this.props.question}                              {/* prop */}\n//     </div>\n//     {answer.map( (x, index) => <button \n//           key={index}               // Just a key\n//           className=\"answerBtn\"     // Just a CSS\n//           onClick = { () => {\n//             setAnswer([x])          // x is in [] coz it is getting mapped through an ARRAY\n//             this.props.selectedOption(x)                  // prop\n//             }\n//           }\n\n//           > {x} </button> )}\n\n//   </div>\n\n//         )\n//       }\n// }\n\n// export default QuestionBox;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Quizbee method\n\n// import React, {useState} from \"react\";\n\n// const QuestionBox = ({question, options, selected}) => {\n//   const [answer, setAnswer] = useState(options);\n//   return (\n//     <div className=\"questionBox\">\n//       <div className=\"question\">{question}</div>\n//       {answer.map((text, index) => (\n//         <button\n//           key={index}               // Just a key\n//           className=\"answerBtn\"     // Just a CSS\n//           onClick={() => {          // Just an onClick\n//             setAnswer([text]);      \n//             selected(text);\n//           }}\n//         >\n//           {text}\n//         </button>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default QuestionBox;\n","import React from \"react\";\n\nconst Result = ({score, playAgain}) => (\n  <div className=\"score-board\">\n    <div className=\"score\">You scored {score} / 5 correct answers!</div>\n    <button className=\"playBtn\" onClick={playAgain}>\n      Play again!\n    </button>\n  </div>\n);\n\nexport default Result;\n","\nconst qBank = [\n  {\n    question:\n      \"Virgin Trains, Virgin Atlantic and Virgin Racing, are all companies owned by which famous entrepreneur?   \",\n    answers: [\"Richard Branson\", \"Alan Sugar\", \"Donald Trump\", \"Bill Gates\"],\n    correct: \"Richard Branson\",\n    questionId: \"099099\"\n  },\n  {\n    question:\n      'Where is the train station \"Llanfair­pwllgwyngyll­gogery­chwyrn­drobwll­llan­tysilio­gogo­goch\"?',\n    answers: [\"Wales\", \"Moldova\", \"Czech Republic\", \"Denmark\"],\n    correct: \"Wales\",\n    questionId: \"183452\"\n  },\n  {\n    question:\n      \"Which company did Valve cooperate with in the creation of the Vive?\",\n    answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\n    correct: \"HTC\",\n    questionId: \"267908\"\n  },\n  {\n    question: \"What's the name of Batman's  parents?\",\n    answers: [\n      \"Thomas & Martha\",\n      \"Joey & Jackie\",\n      \"Jason & Sarah\",\n      \"Todd & Mira\"\n    ],\n    correct: \"Thomas & Martha\",\n    questionId: \"333247\"\n  },\n  {\n    question: \"What is the most common surname Wales?\",\n    answers: [\"Jones\", \"Williams\", \"Davies\", \"Evans\"],\n    correct: \"Jones\",\n    questionId: \"496293\"\n  },\n  {\n    question:\n      \"What was the name of the WWF professional wrestling tag team made up of the wrestlers Ax and Smash?\",\n    answers: [\n      \"Demolition\",\n      \"The Dream Team\",\n      \"The Bushwhackers\",\n      \"The British Bulldogs\"\n    ],\n    correct: \"Demolition\",\n    questionId: \"588909\"\n  },\n  {\n    question:\n      'What name represents the letter \"M\" in the NATO phonetic alphabet?',\n    answers: [\"Mike\", \"Matthew\", \"Mark\", \"Max\"],\n    correct: \"Mike\",\n    questionId: \"648452\"\n  },\n  {\n    question: \"What is the first book of the Old Testament?\",\n    answers: [\"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\"],\n    correct: \"Genesis\",\n    questionId: \"786649\"\n  },\n  {\n    question:\n      \"In the video-game franchise Kingdom Hearts, the main protagonist, carries a weapon with what shape?\",\n    answers: [\"Key\", \"Sword\", \"Pen\", \"Cellphone\"],\n    correct: \"Key\",\n    questionId: \"839754\"\n  },\n  {\n    question:\n      \"Which best selling toy of 1983 caused hysteria, resulting in riots breaking out in stores?\",\n    answers: [\n      \"Cabbage Patch Kids\",\n      \"Transformers\",\n      \"Care Bears\",\n      \"Rubik’s Cube\"\n    ],\n    correct: \"Cabbage Patch Kids\",\n    questionId: \"98390\"\n  },\n  {\n    question: \"What does a funambulist walk on?\",\n    answers: [\"A Tight Rope\", \"Broken Glass\", \"Balls\", \"The Moon\"],\n    correct: \"A Tight Rope\",\n    questionId: \"1071006\"\n  },\n  {\n    question: \"In past times, what would a gentleman keep in his fob pocket?\",\n    answers: [\"Watch\", \"Money\", \"Keys\", \"Notebook\"],\n    correct: \"Watch\",\n    questionId: \"1174154\"\n  },\n  {\n    question: \"Area 51 is located in which US state?\",\n    answers: [\"Nevada\", \"Arizona\", \"New Mexico\", \"Utah\"],\n    correct: \"Nevada\",\n    questionId: \"1226535\"\n  },\n  {\n    question: \"How would one say goodbye in Spanish?\",\n    answers: [\"Adiós\", \" Hola\", \"Au Revoir\", \"Salir\"],\n    correct: \"Adiós\",\n    questionId: \"1310938\"\n  },\n  {\n    question: \"What is the largest organ of the human body?\",\n    answers: [\"Skin\", \"Heart\", \"large Intestine\", \"Liver\"],\n    correct: \"Skin\",\n    questionId: \"1436873\"\n  },\n  {\n    question: \"Which sign of the zodiac is represented by the Crab?\",\n    answers: [\"Cancer\", \"Libra\", \"Virgo\", \"Sagittarius\"],\n    correct: \"Cancer\",\n    questionId: \"1515110\"\n  },\n  {\n    question: \"On a dartboard, what number is directly opposite No. 1?\",\n    answers: [\"19\", \"20\", \"12\", \"15\"],\n    correct: \"19\",\n    questionId: \"1642728\"\n  },\n  {\n    question:\n      \"What does the 'S' stand for in the abbreviation SIM, as in SIM card? \",\n    answers: [\"Subscriber\", \"Single\", \"Secure\", \"Solid\"],\n    correct: \"Subscriber\",\n    questionId: \"1747256\"\n  },\n  {\n    question:\n      \"What word represents the letter 'T' in the NATO phonetic alphabet?\",\n    answers: [\"Tango\", \"Target\", \"Taxi\", \"Turkey\"],\n    correct: \"Tango\",\n    questionId: \"1822532\"\n  },\n  {\n    question: \"Which American president appears on a one dollar bill?\",\n    answers: [\n      \"George Washington\",\n      \"Thomas Jefferson\",\n      \"Abraham Lincoln\",\n      \"Benjamin Franklin\"\n    ],\n    correct: \"George Washington\",\n    questionId: \"195075\"\n  },\n  {\n    question: 'What is \"dabbing\"?',\n    answers: [\"A dance\", \"A medical procedure\", \"A sport\", \"A language\"],\n    correct: \"A dance\",\n    questionId: \"2019778\"\n  },\n  {\n    question: \"What is the name of the Jewish New Year?\",\n    answers: [\"Rosh Hashanah\", \"Elul\", \"New Year\", \"Succoss\"],\n    correct: \"Rosh Hashanah\",\n    questionId: \"2134343\"\n  },\n  {\n    question: \"Which one of the following rhythm games was made by Harmonix?\",\n    answers: [\n      \"Rock Band\",\n      \"Meat Beat Mania\",\n      \"Guitar Hero Live\",\n      \"Dance Dance Revolution\"\n    ],\n    correct: \"Rock Band\",\n    questionId: \"2210799\"\n  },\n  {\n    question:\n      \"What type of animal was Harambe, who was shot after a child fell into it's enclosure at the Cincinnati Zoo?\",\n    answers: [\"Gorilla\", \"Tiger\", \"Panda\", \"Crocodile\"],\n    correct: \"Gorilla\",\n    questionId: \"2379831\"\n  },\n  {\n    question: \"Red Vines is a brand of what type of candy?\",\n    answers: [\"Licorice\", \"Lollipop\", \"Chocolate\", \"Bubblegum\"],\n    correct: \"Licorice\",\n    questionId: \"2426418\"\n  },\n  {\n    question: \"What is the nickname of the US state of California?\",\n    answers: [\"Golden State\", \"Sunshine State\", \"Bay State\", \"Treasure State\"],\n    correct: \"Golden State\",\n    questionId: \"2510086\"\n  },\n  {\n    question: \"What is on display in the Madame Tussaud's museum in London?\",\n    answers: [\n      \"Wax sculptures\",\n      \"Designer clothing\",\n      \"Unreleased film reels\",\n      \"Vintage cars\"\n    ],\n    correct: \"Wax sculptures\",\n    questionId: \"2685745\"\n  },\n  {\n    question:\n      \"What was the nickname given to the Hughes H-4 Hercules, a heavy transport flying boat which achieved flight in 1947?\",\n    answers: [\"Spruce Goose\", \"Noah's Ark\", \"Fat Man\", \"Trojan Horse\"],\n    correct: \"Spruce Goose\",\n    questionId: \"2796884\"\n  },\n  {\n    question: \"Which of these colours is NOT featured in the logo for Google?\",\n    answers: [\"Pink\", \"Yellow\", \"Blue\", \"Green\"],\n    correct: \"Pink\",\n    questionId: \"2838900\"\n  },\n  {\n    question: 'What is the French word for \"hat\"?',\n    answers: [\"Chapeau\", \"Bonnet\", \" Écharpe\", \" Casque\"],\n    correct: \"Chapeau\",\n    questionId: \"298060\"\n  },\n  {\n    question: \"Five dollars is worth how many nickles?\",\n    answers: [\"100\", \"50\", \"25\", \"69\"],\n    correct: \"100\",\n    questionId: \"3096579\"\n  },\n  {\n    question: \"Who is depicted on the US hundred dollar bill?\",\n    answers: [\n      \"Benjamin Franklin\",\n      \"George Washington\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"Benjamin Franklin\",\n    questionId: \"3182461\"\n  },\n  {\n    question: \"What do the letters in the GMT time zone stand for?\",\n    answers: [\n      \"Greenwich Mean Time\",\n      \"Global Meridian Time\",\n      \"General Median Time\",\n      \"Glasgow Man Time\"\n    ],\n    correct: \"Greenwich Mean Time\",\n    questionId: \"3239112\"\n  },\n  {\n    question: \"Which one of these is not a typical European sword design?\",\n    answers: [\"Scimitar\", \"Falchion\", \"Ulfberht\", \"Flamberge\"],\n    correct: \"Scimitar\",\n    questionId: \"3318503\"\n  },\n  {\n    question:\n      'According to Sherlock Holmes, \"If you eliminate the impossible, whatever remains, however improbable, must be the...\"',\n    answers: [\"Truth\", \"Answer\", \"Cause\", \"Source\"],\n    correct: \"Truth\",\n    questionId: \"3410327\"\n  },\n  {\n    question: \"What is the name of Poland in Polish?\",\n    answers: [\"Polska\", \"Pupcia\", \"Polszka\", \"Póland\"],\n    correct: \"Polska\",\n    questionId: \"3542596\"\n  },\n  {\n    question: \"The New York Times slogan is, “All the News That’s Fit to…”\",\n    answers: [\"Print\", \"Digest\", \"Look\", \"Read\"],\n    correct: \"Print\",\n    questionId: \"3667517\"\n  },\n  {\n    question: \"What do the letters of the fast food chain KFC stand for?\",\n    answers: [\n      \"Kentucky Fried Chicken\",\n      \"Kentucky Fresh Cheese\",\n      \"Kibbled Freaky Cow\",\n      \"Kiwi Food Cut\"\n    ],\n    correct: \"Kentucky Fried Chicken\",\n    questionId: \"3791672\"\n  },\n  {\n    question: \"Which restaurant's mascot is a clown?\",\n    answers: [\"McDonald's\", \"Whataburger\", \"Burger King\", \"Sonic\"],\n    correct: \"McDonald's\",\n    questionId: \"3893585\"\n  },\n  {\n    question: 'What color is the \"Ex\" in FedEx Ground?',\n    answers: [\"Green\", \"Red\", \"Light Blue\", \"Orange\"],\n    correct: \"Green\",\n    questionId: \"3913430\"\n  },\n  {\n    question: \"How tall is the Burj Khalifa?\",\n    answers: [\"2,722 ft\", \"2,717 ft\", \"2,546 ft\", \"3,024 ft\"],\n    correct: \"2,722 ft\",\n    questionId: \"4049121\"\n  },\n  {\n    question:\n      \"Which of the following card games revolves around numbers and basic math?\",\n    answers: [\"Uno\", \"Go Fish\", \"Twister\", \"Munchkin\"],\n    correct: \"Uno\",\n    questionId: \"4150746\"\n  },\n  {\n    question:\n      \"What machine element is located in the center of fidget spinners?\",\n    answers: [\"Bearings\", \"Axles\", \"Gears\", \"Belts\"],\n    correct: \"Bearings\",\n    questionId: \"4235063\"\n  },\n  {\n    question: \"Which sign of the zodiac comes between Virgo and Scorpio?\",\n    answers: [\"Libra\", \"Gemini\", \"Taurus\", \"Capricorn\"],\n    correct: \"Libra\",\n    questionId: \"4321002\"\n  },\n  {\n    question: \"Which of the following presidents is not on Mount Rushmore?\",\n    answers: [\n      \"John F. Kennedy\",\n      \"Theodore Roosevelt\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"John F. Kennedy\",\n    questionId: \"4442286\"\n  },\n  {\n    question: \"What is Tasmania?\",\n    answers: [\n      \"An Australian State\",\n      \"A flavor of Ben and Jerry's ice-cream\",\n      \"A Psychological Disorder\",\n      \"The Name of a Warner Brothers Cartoon Character\"\n    ],\n    correct: \"An Australian State\",\n    questionId: \"4564430\"\n  },\n  {\n    question: \"What company developed the vocaloid Hatsune Miku?\",\n    answers: [\"Crypton Future Media\", \"Sega\", \"Sony\", \"Yamaha Corporation\"],\n    correct: \"Crypton Future Media\",\n    questionId: \"4630606\"\n  },\n  {\n    question:\n      \"Which country, not including Japan, has the most people of japanese decent?\",\n    answers: [\"Brazil\", \"China\", \"South Korea\", \"United States of America\"],\n    correct: \"Brazil\",\n    questionId: \"4795960\"\n  },\n  {\n    question: \"Which candy is NOT made by Mars?\",\n    answers: [\"Almond Joy\", \"M&M's\", \"Twix\", \"Snickers\"],\n    correct: \"Almond Joy\",\n    questionId: \"4811162\"\n  },\n  {\n    question: \"In which fast food chain can you order a Jamocha Shake?\",\n    answers: [\"Arby's\", \"McDonald's\", \"Burger King\", \"Wendy's\"],\n    correct: \"Arby's\",\n    questionId: \"4982981\"\n  }\n];\n\n\n\nlet quizService = () => {\n  return new Promise( (resolve,reject) => {\n    resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, 5))  // ~ 5 random questions\n  })\n}\n\nexport default quizService;\n  \n\n  // export default (n = 5) =>\n  // Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n))\n ","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport \"./assets/style.css\";\r\nimport QuestionBox from './components/QuestionBox.js';\r\nimport Result from './components/Result.js';\r\nimport quizService from './quizService/index.js';\r\n\r\n\r\nclass Quizapp extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            questionBank : [],\r\n            score: 0,\r\n            responses: 0,\r\n            token: null,\r\n            abcCorrect:[]\r\n        }\r\n    }\r\n\r\n    getQuestions = () => {\r\n        quizService().then( Nquestions => {\r\n            this.setState({\r\n                questionBank : Nquestions\r\n            });\r\n            console.log(this.state.questionBank)\r\n        \r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getQuestions();\r\n    }\r\n\r\n    computeScore = (selectedAns , correctAns) => {\r\n        if( selectedAns === correctAns ){\r\n            \r\n            this.setState({\r\n                score :  this.state.score + 1  ,\r\n                token: true\r\n            }) \r\n            console.log('bravo');\r\n             \r\n        }\r\n\r\n        else{\r\n            this.setState({\r\n                token : false ,\r\n                abcCorrect : this.state.abcCorrect.concat(correctAns) \r\n            }) \r\n            // console.log('Shit ! ans was' + ' ' + correctAns);      \r\n     \r\n        }\r\n        // console.log(this.state.abc); \r\n\r\n        this.setState({\r\n            responses: this.state.responses < 5 ? this.state.responses + 1 : 5\r\n        })\r\n        console.log(this.state.responses)\r\n        \r\n    }\r\n\r\n\r\n    playAgain = () => {\r\n        this.setState({\r\n            score : 0 ,\r\n            responses: 0 ,\r\n            abcCorrect: [],\r\n            token:null\r\n        })\r\n        this.getQuestions();\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className = \"container\">\r\n                <button onClick={this.getQuestions}>New Questions</button>\r\n                 <h3>{this.state.token === false ? \"Oops ! Correct Answer Was\" + \" \" + this.state.abcCorrect.splice(0,this.state.abcCorrect.length): null }</h3>\r\n\r\n                <div className=\"title\"> QuizApp </div>\r\n                {/* {this.state.abc === true ? console.log('right') : <RightBox rightAns={this.state.abcCorrect}/> }  */}\r\n                {this.state.responses < 5 && this.state.questionBank.map(\r\n                    ( {question,answers,correct,questionId} = this.qBank ) => \r\n                    ( <QuestionBox \r\n                        question={question}\r\n                        options={answers} \r\n                        key={questionId} \r\n                        selectedOption = { (x) => this.computeScore(x , correct)  }\r\n                        correction = {this.state.abcCorrect} />\r\n                    )\r\n                        \r\n                        \r\n                    // OR YOU CAN SIMPLY USE h4 TAG INSTEAD OF <QuestionBox/> -\r\n                    /* <h4 key={questionId} >{question}</h4> */\r\n/* You cannot use key as index bcz here the data is an Object with 4 keys ./components/QuestionBox.js  */\r\n                                            \r\n                    )\r\n                    \r\n                }   \r\n\r\n        {/* console.log('Shit ! ans was' + ' ' + this.state.abcCorrect) */}\r\n                     \r\n        {this.state.responses === 5 ? <Result score={this.state.score} playAgain={this.playAgain}/> : null }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Quizapp />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Unnecessary codes - \r\n// line 30 - this.state.questionBank.length > 0 &&"],"sourceRoot":""}